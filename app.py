# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15X6iDlFsshmFI1tgealDiRCF7HctdMtA
"""

import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import io

st.set_page_config(page_title="Streamify: The Ultimate Song Trends Explorer", layout="wide")
st.title("Streamify: The Ultimate Song Trends Explorer")
st.write("""
Songs have become an important part of our lives. In this analysis, we explore the most played songs dataset through visualizations and graphs using matplotlib and seaborn.
""")

# Load Data
@st.cache_data
def load_data():
    df = pd.read_csv('Spotify-2000.csv')
    if "Index" in df.columns:
        del df["Index"]
    df['Length (Duration)'] = df['Length (Duration)'].astype(str).str.replace(',', '').astype(int)
    return df

songs_df = load_data()

# Data Preview
st.subheader("Dataset Preview")
st.dataframe(songs_df.head())

# Data Info
st.subheader("Dataset Info")
buffer = io.StringIO()
songs_df.info(buf=buffer)
info_str = buffer.getvalue()
st.text(info_str)
st.write(f"Shape: {songs_df.shape}")

# Statistical Summary
st.subheader("Statistical Summary")
st.write(songs_df.describe())

# Songs Released per Year
st.subheader("Songs Released per Year")
fig, ax = plt.subplots(figsize=(10, 8))
sns.countplot(y=songs_df["Year"], ax=ax)
ax.set_xlabel("Number of Songs")
ax.set_ylabel("Year")
ax.set_title("Songs Released on Particular Year")
st.pyplot(fig)

# Average Energy per Year
st.subheader("Average Energy of Songs per Year")
fig, ax = plt.subplots(figsize=(10, 5))
sns.lineplot(x=songs_df["Year"], y=songs_df["Energy"], ax=ax)
ax.set_ylabel("Energy of Song")
ax.set_title("Average Energy of Songs released per Year")
st.pyplot(fig)

# Average Loudness per Year
st.subheader("Average Loudness of Songs per Year")
fig, ax = plt.subplots(figsize=(10, 8))
sns.barplot(x=songs_df["Loudness (dB)"], y=songs_df["Year"], orient="h", ax=ax)
ax.set_xlabel("Loudness (dB)")
ax.set_ylabel("Year")
ax.set_title("Average Loudness of Songs released per Year")
st.pyplot(fig)

# Average Popularity per Year
st.subheader("Popularity of Songs per Year")
fig, ax = plt.subplots(figsize=(10, 5))
sns.lineplot(x=songs_df["Year"], y=songs_df["Popularity"], ci=0, ax=ax)
ax.set_ylabel("Popularity of Song")
ax.set_title("Popularity of Songs released per Year")
st.pyplot(fig)

# Popularity vs Loudness
st.subheader("Popularity vs Loudness of Songs per Year")
fig, ax = plt.subplots(figsize=(10, 5))
sns.scatterplot(x=songs_df["Popularity"], y=songs_df["Loudness (dB)"], hue=songs_df["Year"], size=songs_df["Year"], ax=ax)
ax.set_ylabel("Loudness of Song (dB)")
ax.set_xlabel("Popularity of Song")
ax.set_title("Popularity and Loudness of Songs released per Year")
st.pyplot(fig)

# Most Popular Songs
st.subheader("Top 20 Most Popular Songs")
popular_songs = songs_df.sort_values("Popularity", ascending=False).head(20)
fig, ax = plt.subplots(figsize=(10, 8))
sns.barplot(x=popular_songs.Popularity, y=popular_songs.Title, ax=ax)
ax.set_xlabel("Popularity of Song")
ax.set_ylabel("Title of Song")
ax.set_title("Most Popular Songs of All Time")
st.pyplot(fig)
st.write(popular_songs[["Title", "Artist", "Popularity"]])

# Danceability vs Energy over years
st.subheader("Danceability vs Energy Over Years")
fig, ax = plt.subplots(figsize=(10, 5))
sns.lineplot(x=songs_df["Year"], y=songs_df["Danceability"], ci=0, ax=ax, label="Danceability")
sns.lineplot(x=songs_df["Year"], y=songs_df["Energy"], ci=0, ax=ax, label="Energy")
ax.legend()
ax.set_xlabel("Release Year")
ax.set_ylabel("Rating")
ax.set_title("Relation Between Danceability and Energy")
st.pyplot(fig)

# Top 10 genres
st.subheader("Top 10 Genres of All Time")
top_genres_df = songs_df.groupby(["Top Genre"], as_index=False)["Title"].count().sort_values('Title', ascending=False).head(10)
fig, ax = plt.subplots(figsize=(10, 6))
sns.barplot(x=top_genres_df["Title"], y=top_genres_df["Top Genre"], ax=ax)
ax.set_xlabel("Number of Songs")
ax.set_ylabel("Genre")
ax.set_title("Top Genres of All Time")
st.pyplot(fig)
st.write(top_genres_df)

# Songs released after 2000 by artist
st.subheader("Songs Released by Artists After 2000s")
songs_2000s_df = songs_df[songs_df.Year >= 2000].copy()
top_popular_df = songs_2000s_df.groupby(["Artist", "Year"], as_index=False)[["Title"]].count().sort_values('Title', ascending=False).head(40)
heatmap_df = top_popular_df.pivot(index="Artist", columns="Year", values="Title").fillna(0)

fig, ax = plt.subplots(figsize=(12, 8))
sns.heatmap(heatmap_df, cmap="YlGnBu", ax=ax)
ax.set_title("Number of Songs Released by Artists")
st.pyplot(fig)

# Average length of songs
st.subheader("Average Length (Duration) of Songs")
fig, ax = plt.subplots(figsize=(10, 5))
sns.histplot(x=songs_df["Length (Duration)"], kde=True, ax=ax)
ax.set_xlabel("Length (s)")
ax.set_title("Length (Duration) used in the Songs")
st.pyplot(fig)
st.write(f"Average song duration: {songs_df['Length (Duration)'].mean():.2f} seconds")